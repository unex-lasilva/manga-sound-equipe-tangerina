
- CODIGO ABAIXO -


import java.util.Scanner;

public class MangaSoundApplication {
    public static final String RESET = "\u001B[0m";
    public static final String AZUL = "\u001B[34m";
    public static final String VERDE = "\u001B[32m";
    public static final String AMARELO = "\u001B[33m";
    public static final String CIANO = "\u001B[36m";
    public static final String VERMELHO = "\u001B[31m";
    public static final String NEGRITO = "\u001B[1m";

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        GerenciadorDeMusicas reprodutor = new GerenciadorDeMusicas();
        GerenciadorDePlaylists gerenciadorDePlaylists = new GerenciadorDePlaylists();

        System.out.println(AZUL + NEGRITO + "\nüéµ Bem-vindo ao MangaSound Player! üéµ" + RESET);
        System.out.print(AMARELO + "Voc√™ est√° preparado para uma jornada radiof√¥nica? (sim ou n√£o): " + RESET);
        String resposta = scanner.nextLine().trim().toLowerCase();

        if (resposta.equals("n√£o")) {
            System.out.println(VERMELHO + "Ok, talvez uma pr√≥xima vez. Bye! üëã" + RESET);
            scanner.close();
            System.exit(0);
        } else if (!resposta.equals("sim")) {
            System.out.println(CIANO + "Resposta incomum... mas vamos nessa assim mesmo! üöÄ" + RESET);
        }

        while (true) {
            System.out.println(NEGRITO + "\n======================================================" + RESET);
            System.out.println(NEGRITO + CIANO + "                  üéß MENU PRINCIPAL üéß                  " + RESET);
            System.out.println(NEGRITO + "======================================================" + RESET);
            System.out.println(VERDE + "  1." + RESET + "  Adicionar m√∫sica");
            System.out.println(VERDE + "  2." + RESET + "  Criar playlist");
            System.out.println(VERDE + "  3." + RESET + "  Adicionar m√∫sica √† playlist");
            System.out.println(VERDE + "  4." + RESET + "  Reproduzir playlist");
            System.out.println(VERDE + "  5." + RESET + "  Sair");
            System.out.println(NEGRITO + "======================================================" + RESET);
            System.out.print(NEGRITO + AMARELO + "Escolha uma op√ß√£o: " + RESET);

            try {
                int opcao = Integer.parseInt(scanner.nextLine());
                // Apenas exibe mensagens para op√ß√µes n√£o implementadas ainda
                switch (opcao) {
                    case 1:
                        System.out.println(VERMELHO + " " + RESET);
                        break;
                    case 2:
                        System.out.println(VERMELHO + " " + RESET);
                        break;
                    case 3:
                        System.out.println(VERMELHO + " " + RESET);
                        break;
                    case 4:
                        System.out.println(VERMELHO + " " + RESET);
                        break;
                    case 5:
                        System.out.println(VERDE + "At√© logo! üëã Encerrando o MangaSound Player..." + RESET);
                        scanner.close();
                        System.exit(0);
                    default:
                        System.out.println(VERMELHO + "‚ùå Op√ß√£o inv√°lida! Tente novamente." + RESET);
                }
            } catch (Exception e) {
                System.out.println(VERMELHO + "Erro: " + e.getMessage() + RESET);
            }
        }


          - ESPECIALIZA√á√ÉO DO CODIG√ì - 

          Nessa primeira vers√£o do MangaSound, criamos s√≥ o b√°sico: um menu colorido com op√ß√µes (adicionar m√∫sica, playlists etc.) que ainda n√£o funciona. 
          O programa j√° come√ßava interativo, perguntando se o usu√°rio querer continuar e tratando respostas erradas. 
          As classes principais estav√£o definidas mas vazias - a Application controla o menu, enquanto GerenciadorDeMusicas e GerenciadorDePlaylists ser√£o implementados depois. 
          √© s√≥ o esqueleto do player, sem funcionalidades reais ainda, mas bem organizado pra facilitar a evolu√ß√£o. O c√≥digo j√° prever erros simples, evitando travamentos. 
          Essa base d√° pra evoluir rapidamente pelo tempo que nos resta e desenvolver as pr√≥ximas vers√µes sem precisar ficar refazer tudo.
